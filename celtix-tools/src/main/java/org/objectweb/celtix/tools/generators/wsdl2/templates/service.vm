package $service.PackageName;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
#foreach ($port in ${service.Ports})	
import ${service.PackageName}.${port.InterfaceClass};
#end
/**
 * This class was generated by the Celtix $version
 * $currentdate
 * Generated source version: $version
 * 
 */

@WebServiceClient(name = "${service.Name}", targetNamespace = "$service.Namespace", wsdlLocation = "$wsdlLocation")
public class ${service.Name}
    extends Service
{

    private final static URL WSDL_LOCATION;
    private final static QName SOAPSERVICE = new QName("$service.Namespace", "$service.Name");
    #foreach ($port in ${service.Ports})
    private final static QName $port.PortName = new QName("$service.Namespace", "$port.PortName");
    #end
    static {
        URL url = null;
        try {
            url = new URL("$wsdlLocation");
        } catch (MalformedURLException e) {
            e.printStackTrace();
        }
        WSDL_LOCATION = url;
    }

    public ${service.Name}(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public ${service.Name}() {
        super(WSDL_LOCATION, SOAPSERVICE);
    }

    #foreach ($port in $service.Ports)
    /**
     * 
     * @return
     *     returns ${port.PortName}
     */
    @WebEndpoint(name = "${port.PortName}")
    public ${port.InterfaceClass} get${port.PortName}() {
        return (${port.InterfaceClass})super.getPort($port.PortName, ${port.InterfaceClass}.class);
    }
    #end
}
<?xml version="1.0"?>
<!-- 
     Generated by WSDLToJava Compiler. 
     /**
     * This class was generated by the Celtix $version
     * $currentdate
     * Generated source version: $version
     * 
     */
-->

<project name="celtix wsdltojava" default="build" basedir=".">
    
    <property environment="env"/>
    <property name="build.dir" location ="${basedir}/build"/>
    <property name="build.classes.dir" location ="${build.dir}/classes"/>
    <property name="build.src.dir" location ="${basedir}"/>

    <!-- find the tools jar, which on darwin, tools.jar does not exist -->
    <available property="tools.jar" value="$${env.JAVA_HOME}/lib/tools.jar"
	       file="${env.JAVA_HOME}/lib/tools.jar"/>
    <path id="jdk.tools.classpath">
	<pathelement location="${tools.jar}"/>
    </path>

    <condition property="is.java.version.15">
	<equals arg1="${ant.java.version}" arg2="1.5"/>
    </condition>

    <fail message="Celtix requires Java version 1.5 or higher. You are currently using Java version ${ant.java.version}."
	  unless="is.java.version.15"/>

    <!-- Determine celtix.home, either from the environment variable CELTIX_HOME
	 - or using ../..
    -->
    <condition property="celtix.home" value="${env.CELTIX_HOME}">
	<isset property="env.CELTIX_HOME"/>
    </condition>

    <fail message="Please set CELTIX_HOME environment variable." unless="celtix.home"/>

    <!-- Determine celtix.jar.file, either ${celtix.home}/build/lib/celtix.jar
	 - in a source distribution, or ${celtix.home}/lib/celtix.jar in a binary
	 - distribution.
    -->
    <condition property="celtix.jar.file" value="${celtix.home}/build/lib/celtix.jar">
	<available file="celtix.jar" type="file" filepath="${celtix.home}/build/lib"/>
    </condition>
    <property name="celtix.jar.file" value="${celtix.home}/lib/celtix.jar"/>

    <fail message="The location ${celtix.home} does not seem to contain a Celtix installation; if you are importing this common build file from a location other than the Celtix samples directory then you need to set the CELTIX_HOME environment variable.">
	<condition>
	    <not>
		<isset property="celtix.jar.file" />
	    </not>
	</condition>
    </fail>

    <!-- Determine the tools directory, either ${celtix.home}/tools
	 - in a source distribution, or ${celtix.home}/lib in a binary
	 - distribution.
    -->
    <condition property="thirdparty.tools.dir" value="${celtix.home}/tools">
	<available file="tools" type="dir" filepath="${celtix.home}"/>
    </condition>

    <condition property="thirdparty.tools.dir" value="${celtix.home}/lib">
	<available file="lib" type="dir" filepath="${celtix.home}"/>
    </condition>

    <property name="celtix.etc.dir" location="${celtix.home}/etc"/>

    <path id="celtix.classpath">
	<pathelement location="${build.classes.dir}"/>
	<pathelement location="${celtix.jar.file}"/>
    </path>

#foreach ($interface in $intfs)
    <target name="${interface.Name}.Client" description="Run ${interface.Name} client" depends="compile">
	<property name="param" value=""/>
	<celtixrun classname="${interface.PackageName}.${interface.Name}Client"
		   param1="$wsdlLocation"
		   param2="${op}" 
		   param3="${param}"/>
    </target> 

    <target name="${interface.Name}.Server" description="Run ${interface.Name} server" depends="compile">
	<celtixrun classname="${interface.PackageName}.${interface.Name}Server" 
		   param1="$wsdlLocation"/>
    </target>
#end


    <target name="compile">
	<mkdir dir="${build.classes.dir}"/>
	<javac srcdir="${build.src.dir}" destdir="${build.classes.dir}" debug="true">
	    <classpath refid="celtix.classpath" />
	</javac>
    </target>

    <target name="checkstyle">
	<checkstyle config="${checkstyle.config.file}">
	    <fileset dir="${basedir}/src" includes="**/*.java"/>
	    <classpath>
		<path refid="celtix.classpath"/>
	    </classpath>
	</checkstyle>
    </target>

    <target name="clean">
	<delete dir="${build.classes.dir}"/>
	<delete file="${java.timestamp.file}"/>
	<delete file="demo.log"/>
    </target>
    
    <target name="build"  depends="compile" description="build demo client and server"/>

    <macrodef name="celtixrun">
	<attribute name="classname"/>
	<attribute name="param1" default=""/>
	<attribute name="param2" default=""/>
	<attribute name="param3" default=""/>
	<attribute name="param4" default=""/>
	<attribute name="param5" default=""/>
	<attribute name="jvmarg1" default="-D"/>
	<attribute name="jvmarg2" default="-D"/>
	<attribute name="jvmarg3" default="-D"/>
	<attribute name="jvmarg4" default="-D"/>
	<attribute name="jvmarg5" default="-D"/>
	<sequential>
	    <java classname="@{classname}" fork="yes">
		<classpath>
		    <path refid="celtix.classpath"/>
		</classpath>
		<arg value="@{param1}"/>
		<arg value="@{param2}"/>
		<arg value="@{param3}"/>
		<arg value="@{param4}"/>
		<arg value="@{param5}"/>
		<jvmarg value="@{jvmarg1}"/>
		<jvmarg value="@{jvmarg2}"/>
		<jvmarg value="@{jvmarg3}"/>
		<jvmarg value="@{jvmarg4}"/>
		<jvmarg value="@{jvmarg5}"/>
		<assertions>
		    <enable package="org.objectweb.celtix"/>
		</assertions>
		<sysproperty key="java.util.logging.config.file" value="${celtix.etc.dir}/logging.properties"/>
		<sysproperty key="log4j.configuration" value="file:///${celtix.etc.dir}/log4j.properties"/>
	    </java>
	</sequential>
    </macrodef>
</project>

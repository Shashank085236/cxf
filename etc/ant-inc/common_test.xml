<?xml version="1.0"?>
<!-- common tests and defintions for running tests -->

<project name="celtix-common-test" basedir="../..">

    <!-- run a suite of JUnit based tests -->
    <!-- type attribute selects either unit or system -->
    <!-- tests to be run -->
    <macrodef name="runjunittest">
        <attribute name="type"/>
        <sequential>
            <mkdir dir="${basedir}/build/testresults/@{type}"/>

            <condition property="tests.filters" value="**/*Test.class">
                <not>
                    <and>
                        <isset property="test.class"/>
                        <available classname="${test.class}" classpathref="@{type}.test.classpath"/>
                    </and>
                </not>
            </condition>
            <condition property="test.real.class" value="${test.class}">
                <isset property="test.class"/>
            </condition>
            <property name="test.real.class" value="org.objectweb.celtix.testutils.NoTestTestcase"/>
            <property name="test.output.formatter" value="brief"/>

            <junit fork="yes" haltonfailure="false"
               failureproperty="@{type}.test.failed"
               dir="${basedir}/build/classes-tests/@{type}"
               timeout="100000"
               >
                <jvmarg value="-Djaxws.home=${jaxws.home}"/>
                <formatter type="${test.output.formatter}" useFile="false"/>
                <formatter type="xml"/>
                <classpath>
                    <path refid="@{type}.test.classpath"/>
                </classpath>
                <jvmarg value="-ea"/>

                <sysproperty key="java.util.logging.config.file" value="${basedir}/build/classes-tests/@{type}/logging.properties"/>
                <sysproperty key="javax.xml.ws.spi.Provider" value="org.objectweb.celtix.bus.jaxws.spi.ProviderImpl"/>

                <test name="${test.real.class}" todir="${basedir}/build/testresults/@{type}" outfile="@{type}test-results" />
                <batchtest todir="${basedir}/build/testresults/@{type}">
                    <fileset dir="${basedir}/build/classes-tests/@{type}">
                        <include name="${tests.filters}"/>
                    </fileset>
                </batchtest>
            </junit>
            <fail message="JUnit @{type} test failure." if="@{type}.test.failed"/>
        </sequential>
    </macrodef>

    <property name="command.classpath.refid" value="unit.test.classpath"/>
    <target name="generate.command.script">
        <condition property="script.extension" value=".bat">
            <os family="windows"/>
        </condition>
        <condition property="java.extension" value=".exe">
            <os family="windows"/>
        </condition>
        <condition property="all.parameters.flag" value="%*">
            <os family="windows"/>
        </condition>
        <condition property="classpath.flag" value="%CP%">
            <os family="windows"/>
        </condition>
        <condition property="set.env.command" value="set ">
            <os family="windows"/>
        </condition>
        <property name="script.extension" value=""/>
        <property name="java.extension" value=""/>
        <property name="all.parameters.flag" value="$@"/>
        <property name="classpath.flag" value="$CP"/>
        <property name="set.env.command" value="#!/bin/sh${line.separator}"/>
    	

        <pathconvert property="path.id.string" refid="${command.classpath.refid}"/>
        <echo file="run${script.extension}" append="false" message="${set.env.command}CP=${path.id.string}${line.separator}java${java.extension} -Djava.util.logging.config.file=${basedir}/build/classes-tests/unit/logging.properties -Djavax.xml.ws.EndpointFactory=org.objectweb.celtix.bus.EndpointFactoryImpl -Djavax.xml.ws.ServiceFactory=org.objectweb.celtix.bus.ServiceFactoryImpl -classpath &quot;${classpath.flag}&quot; ${all.parameters.flag}${line.separator}"/>
        <chmod file="run${script.extension}" perm="ugo+x"/>
    </target>

</project>
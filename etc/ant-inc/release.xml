<?xml version="1.0"?>
<project name="celtix-release" basedir="../../">
    <import file="compile.xml"/>
    <import file="javadoc.xml"/>

    <target name="release" depends="celtix.bin.jar,publicapi.javadoc,check.samples"
        description="Build a release kit">

        <mkdir dir="${build.release.dir}"/>
        <mkdir dir="${build.release.dir}/bin"/>
        <mkdir dir="${build.release.dir}/samples"/>
        <copy todir="${build.release.dir}">
            <fileset dir="${basedir}">
                <include name="NOTICE"/>
            </fileset>
        </copy>
        <copy includeEmptyDirs="false" todir="${build.release.dir}/bin">
            <fileset dir="${basedir}/bin">
                <include name="**/*"/>
            </fileset>
        </copy>
        <copy includeEmptyDirs="false" todir="${build.release.dir}/etc">
            <fileset dir="${basedir}/etc">
                <include name="logging.properties"/>
                <include name="log4j.properties"/>
                <include name="web.xml"/>
            </fileset>
        </copy>     
        <copy includeEmptyDirs="false" todir="${build.release.dir}/samples">
            <fileset dir="${basedir}/samples">
                <include name="**/*"/>
                <exclude name="**/build/**/*"/>
                <exclude name="**/build"/>
            </fileset>
        </copy>
        <copy file="${celtix.bin.jar}" tofile="${build.release.dir}/lib/celtix.jar"/>
        <copy todir="${build.release.dir}/lib">
            <fileset dir="${tools.dir}">
                <include name="wsdl4j/**/*"/>
                <include name="jetty/**/*"/>
                <include name="jaxws-ri/**/*"/>
                <include name="spring/**/*"/>
                <include name="velocity/**/*"/>
                <include name="activemq/**/*"/>
            </fileset>
        </copy>
        <copy todir="${build.release.dir}/docs">
            <fileset dir="${basedir}/docs">
                <include name="**/*"/>
            </fileset>
        </copy>
        <copy todir="${build.release.dir}/docs/api">
            <fileset dir="${basedir}/build/javadoc/api">
                <include name="**/*"/>
            </fileset>
        </copy>
        
        <delete dir="${build.package.dir}" quiet="true"/>
        <mkdir dir="${build.package.dir}"/>

        <!-- Binary Distribution Packaging -->
        <tar compression="gzip"
            destfile="${build.package.dir}/celtix-${celtix.version}-bin-lgpl.tgz"
            longfile="gnu">
            <tarfileset prefix="celtix-${celtix.version.short}" dir="${build.release.dir}">
                <include name="**/*"/>
                <exclude name="**/*.wc"/>
                <exclude name="bin/*"/>
            </tarfileset>
            <tarfileset prefix="celtix-${celtix.version.short}" dir="${build.release.dir}" mode="755">
                <include name="bin/*"/>
            </tarfileset>
            <tarfileset prefix="celtix-${celtix.version.short}" dir="${basedir}">
                <include name="resources/**/*"/>
                <include name="LICENSE-LGPL.txt"/>
                <include name="3party-licenses.txt"/>
            </tarfileset>
        </tar>
        <tar compression="gzip"
            destfile="${build.package.dir}/celtix-${celtix.version}-bin-epl.tgz"
            longfile="gnu">
            <tarfileset prefix="celtix-${celtix.version.short}" dir="${build.release.dir}">
                <include name="**/*"/>
                <exclude name="**/*.wc"/>
                <exclude name="bin/*"/>
            </tarfileset>
            <tarfileset prefix="celtix-${celtix.version.short}" dir="${build.release.dir}" mode="755">
                <include name="bin/*"/>
            </tarfileset>
            <tarfileset prefix="celtix-${celtix.version.short}" dir="${basedir}">
                <include name="resources/**/*"/>
                <include name="LICENSE-EPL.txt"/>
                <include name="3party-licenses.txt"/>
            </tarfileset>
        </tar>
        
        <!-- Source Distribution Packaging -->
        <tar compression="gzip"
            destfile="${build.package.dir}/celtix-${celtix.version}-src-lgpl.tgz"
            longfile="gnu">
            <tarfileset prefix="celtix-${celtix.version.short}-src" dir="${basedir}">
                <include name="**/*"/>
                <exclude name="build"/>
                <exclude name="build/**/*"/>
                <exclude name="samples/**/build/**/*"/>
                <exclude name="**/.*"/>
                <exclude name="NOTICE"/>
                <exclude name="bin/*"/>
                <exclude name="tools/**/bin/*"/>
                <exclude name="LICENSE-EPL.txt"/>
                <exclude name="3party-*.txt"/>
            </tarfileset>
            <tarfileset prefix="celtix-${celtix.version.short}-src" dir="${build.release.dir}" mode="755">
                <include name="bin/*"/>
            </tarfileset>
            <tarfileset prefix="celtix-${celtix.version.short}-src" dir="${basedir}" mode="755">
                <include name="tools/**/bin/*"/>
            </tarfileset>
            <tarfileset prefix="celtix-${celtix.version.short}-src" dir="${basedir}">
                <include name=".ruleset"/>
            </tarfileset>
            <tarfileset prefix="celtix-${celtix.version.short}-src" dir="${basedir}" fullpath="3party-licenses.txt">
                <include name="3party-licenses-source.txt"/>
            </tarfileset>             
        </tar>
        <tar compression="gzip"
            destfile="${build.package.dir}/celtix-${celtix.version}-src-epl.tgz"
            longfile="gnu">
            <tarfileset prefix="celtix-${celtix.version.short}-src" dir="${basedir}">
                <include name="**/*"/>
                <exclude name="build"/>
                <exclude name="build/**/*"/>
                <exclude name="samples/**/build/**/*"/>
                <exclude name="**/.*"/>
                <exclude name="NOTICE"/>
                <exclude name="bin/*"/>
                <exclude name="tools/**/bin/*"/>
                <exclude name="LICENSE-LGPL.txt"/>
                <exclude name="3party-*.txt"/>
            </tarfileset>
            <tarfileset prefix="celtix-${celtix.version.short}-src" dir="${build.release.dir}" mode="755">
                <include name="bin/*"/>
            </tarfileset>
            <tarfileset prefix="celtix-${celtix.version.short}-src" dir="${basedir}" mode="755">
                <include name="tools/**/bin/*"/>
            </tarfileset>
            <tarfileset prefix="celtix-${celtix.version.short}-src" dir="${basedir}">
                <include name=".ruleset"/>
            </tarfileset>
            <tarfileset prefix="celtix-${celtix.version.short}-src" dir="${basedir}" fullpath="celtix-${celtix.version.short}-src/3party-licenses.txt">
                <include name="3party-licenses-source.txt"/>
            </tarfileset>            
        </tar>        
    </target>

    <target name="celtix.bin.jar" depends="src.compile" description="build the celtix jar for a binary distribution">
        <mkdir dir="${build.lib.dir}"/>
        <pathconvert dirsep="/" pathsep=" " property="manifest.bin.classpath" refid="runtime.classpath">
            <!-- remove the location specific parts -->
            <map from="${tools.dir}${file.separator}" to=""/>
            <map from="${basedir}${file.separator}resources" to="..${file.separator}resources"/>
        </pathconvert>

        <jar destfile="${celtix.bin.jar}">
            <fileset dir="${build.classes.dir}"/>      
            <fileset dir="${basedir}/resources"/>      
            <metainf dir="${basedir}/etc/metainf"/>
            <manifest>
                <attribute name="Class-Path" value="${manifest.bin.classpath}"/>
            </manifest>
        </jar>
    </target>

    <target name="celtix.jar" depends="src.compile" description="build the celtix jar for a source distribution">
        <mkdir dir="${build.lib.dir}"/>
        <pathconvert dirsep="/" pathsep=" " property="manifest.classpath" refid="runtime.classpath">
            <!-- remove the location specific parts -->
            <map from="${tools.dir}" to="..${file.separator}..${file.separator}tools"/>
            <map from="${basedir}${file.separator}resources" to="..${file.separator}..${file.separator}resources"/>
        </pathconvert>

        <jar destfile="${celtix.jar}">
            <fileset dir="${build.classes.dir}"/>      
            <fileset dir="${basedir}/resources"/>      
            <metainf dir="${basedir}/etc/metainf"/>
            <manifest>
                <attribute name="Class-Path" value="${manifest.classpath}"/>
        <attribute name="Implementation-Vendor" value="${celtix.vendor}"/>
        <attribute name="Implementation-Version" value="${celtix.version.short}"/>
            </manifest>
        </jar>
    </target>

    <target name="check.samples" depends="celtix.jar">
        <check.sample sample.dir="samples/configuration"/>
        <check.sample sample.dir="samples/handlers"/>
        <check.sample sample.dir="samples/hello_world"/>
        <check.sample sample.dir="samples/hello_world_JMS_pubsub"/>
        <check.sample sample.dir="samples/hello_world_JMS_queue"/>
        <check.sample sample.dir="samples/hello_world_RPCLit"/>
        <check.sample sample.dir="samples/hello_world_async"/>
        <check.sample sample.dir="samples/soap_header"/>
        <check.sample sample.dir="samples/streams"/>
        <check.sample sample.dir="samples/ws_addressing"/>
        <pmd printToConsole="true"
         targetjdk="1.5"
         rulesetfiles="${basedir}/.ruleset"
         failonerror="true"
         failOnRuleViolation="true">
          <fileset dir="samples">
            <include name="**/src/**/*.java"/>
        <exclude name="**/build/**"/>
          </fileset>
        </pmd>
    </target>

    <macrodef name="check.sample">
        <attribute name="sample.dir"/>
        <sequential>
            <ant dir="@{sample.dir}" target="compile" inheritAll="false"/>
            <ant dir="@{sample.dir}" target="checkstyle" inheritAll="false">
                <property name="checkstyle.config.file" location="${basedir}/etc/checkstyle.xml"/>
            </ant>
        </sequential>
    </macrodef>
</project>

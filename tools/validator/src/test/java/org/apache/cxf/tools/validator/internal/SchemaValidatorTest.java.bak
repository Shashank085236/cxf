/**
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements. See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership. The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied. See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

package org.apache.cxf.tools.validator.internal;

import junit.framework.TestCase;
import org.junit.Test;
import org.junit.Ignore;

public class SchemaValidatorTest extends TestCase {

    @Ignore
    public void testWSDLImport1() throws Exception {
        String wsdlSource = getClass().getResource("resources/a.wsdl").toURI().toString();
        SchemaValidator validator = new SchemaValidator(null);
        try {
            assertFalse(validator.validate(wsdlSource, null));
            fail("should fail, a.wsdl is not a valid wsdl");
        } catch (Exception e) {
            System.err.println(e.getMessage());            
            // ok
        }
    }


    @Ignore
    public void testWSDLImport2() throws Exception {
        String wsdlSource = getClass().getResource("resources/physicalpt.wsdl").toURI().toString();
        SchemaValidator validator = new SchemaValidator(null);
        try {
            assertTrue(validator.validate(wsdlSource, null));
        } catch (Exception e) {
            System.err.println(e.getMessage());
            fail("physicalpt.wsdl is a valid wsdl");
        }
    }
}

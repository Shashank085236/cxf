Apache CXF 2.0.11 Release Notes

1. Overview

Apache CXF 2.0.11 delivers the latest set of patches for the 2.0.x series
fixing another 35 reported JIRA issues.


2. Installation Prerequisites 

Before installing Apache CXF, make sure the following products,
with the specified versions, are installed on your system:

    * Java 5 Development Kit   (Java 6 requires extra setup)
    * Apache ant 1.6

2.1 Java 5 Development Kit

You must install the J2SE Development Kit (JDK) 5.0, which can be downloaded
from:

    http://java.sun.com/j2se/1.5.0/download.jsp

After installing the JDK, set or modify the following environment variables:

    * JAVA_HOME -- set this environment variable
      to point at the root directory of the JDK 5.0 installation.

    * PATH -- make sure that your PATH includes: 
      %JAVA_HOME%\bin  (Windows) 
      $JAVA_HOME/bin   (UNIX)

If using a Java 6 kit, you may need to copy the jaxb-*, saaj-*, jaxws-* jars 
from the lib dir to your jre/lib/endorsed directory.


2.2 Apache Ant 1.6.5 (or newer, 1.7.0 should work as well)

To run samples included in the binary distribution of Apache CXF,
you must install the Apache Ant 1.6.5 build utility, which can be downloaded
from:

    http://ant.apache.org/bindownload.cgi

After installing Apache Ant, add the <AntInstallDir>/bin directory to your PATH.

For more details, see the Installation Guide.


3. Building the Samples

Building the samples included in the binary distribution is easy. Change to
the samples directory and follow the build instructions in the README.txt file 
included with each sample.

4. Errata

4.1 WS-Security
The WS-Security configuration mechanisms may change between this release and 
the next one as we add in support for WS-SecurityPolicy and WS-Trust.

5. Reporting Problems

If you have any problems or want to send feedback of any kind, please e-mail the
cxf dev list, dev@cxf.apache.org.  You can also file issues in JIRA at:

http://issues.apache.org/jira/browse/CXF

6. Specific issues, features, and improvements fixed in this version:


** Sub-task
    * [CXF-2110] - Missing parameterOrder attribute in java2wsdl generated RPC wsdls
    * [CXF-2114] - java2ws generates invalid import statement when using member classes

** Bug
    * [CXF-973] - WebFault(faultBean="...") not used
    * [CXF-1999] - HTTP conduit configuration is not loaded when not using Spring
    * [CXF-2025] - Null Pointer Exception in AbstractInvoker.createFault()
    * [CXF-2030] - JMS transport is not usable with IBM MQI interface endpoints
    * [CXF-2033] - StaxUtils assumes DOM Node::appendChild(c) returns the passed-in child
    * [CXF-2034] - JMS client transport (JMSConduit) does not tear down its reply awaiting listener on Bus shutdown
    * [CXF-2037] - SoapFault subcode not outputted correctly in Soap12FaultOutInterceptor
    * [CXF-2038] - changes for signaturePropFile and decryptionPropFile of WSS4JInteceptor can't be reloaded if we use cxf in container
    * [CXF-2049] - Temporary files are not deleted under windows
    * [CXF-2050] - MimeBodyPartInputStream never finishes reading certain streams
    * [CXF-2062] - MTOM content-type header missing required "type" parameter
    * [CXF-2067] - Can't send message attachments via the WebServiceContext in 2.0.x
    * [CXF-2077] - When using wsdl2java with the -db xmlbeans flag, the generated build.xml doesn't work OOTB
    * [CXF-2082] - client using decoupled ws-addressing with async handler hang from time to time
    * [CXF-2084] - AbstractMessageResponseTimeInterceptor has protected methods, but default (package) scope constructor
    * [CXF-2087] - CXFServlet / URIResolver tries to load file "" (empty file name)
    * [CXF-2104] - Caller application hangs in case it uses the polling (Response) method with JAX-WS async mapping and an http error occurs during sending. In case of callback style (AsyncHandler), the client application has no way of getting the exception.
    * [CXF-2105] - The CxfBusLifeCycleManager can cause ConcurrentModificationExceptions to be thrown
    * [CXF-2106] - Temp files created for data over 64kb are never deleted
    * [CXF-2115] - refactor JBIConduitOutputStream exception handle
    * [CXF-2145] - Proxy in JCA connector throws exception due to concurrency issues
    * [CXF-2149] - java.lang.ArrayStoreException getting headers in handler
    * [CXF-2152] - Certain Spring AOP proxies cannot be used any more as service bean since CXF 2.1.4 because the real (non-proxy) target class is not found correctly by SpringAopClassHelper
    * [CXF-2161] - WSA handler class MAPCodec is not decoding From header
    * [CXF-2163] - org.apache.cxf.resource.URIResolver on Websphere 6.1 doesn't resolve from "wsjar:" base URI's
    * [CXF-2172] - RPC/Lit types with both XmlType and XmlRootElement are ending up as element parts, not type parts

** Improvement
    * [CXF-2042] - Expose totalHandlingTime attribute in ResponseTimeCounterMBean to offer trendsup monitoring
    * [CXF-2063] - should set catalogManager debug level a bit ealier
    * [CXF-2081] - Allow specifying a Java heap size when wsdl2java -compile invokes Java compiler
    * [CXF-2140] - Allow injection of an existing MBeanServer into the InstrumentationManagerImpl
    * [CXF-2141] - Expose faults count in ResponseTimeCounter in addition to existing invocations count
    * [CXF-2169] - JBIConduitOutputStream need save JBI MessageExchange in response message for later possible use

** New Feature
    * [CXF-2069] - provide services list that's easily parseable










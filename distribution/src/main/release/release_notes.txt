Apache CXF 2.0.6 Release Notes

1. Overview

Apache CXF 2.0.6 delivers the latest set of patches for the 2.0.x series
fixing another 21 reported JIRA issues.


2. Installation Prerequisites 

Before installing Apache CXF, make sure the following products,
with the specified versions, are installed on your system:

    * Java 5 Development Kit   (Java 6 requires extra setup)
    * Apache ant 1.6

2.1 Java 5 Development Kit

You must install the J2SE Development Kit (JDK) 5.0, which can be downloaded
from:

    http://java.sun.com/j2se/1.5.0/download.jsp

After installing the JDK, set or modify the following environment variables:

    * JAVA_HOME -- set this environment variable
      to point at the root directory of the JDK 5.0 installation.

    * PATH -- make sure that your PATH includes: 
      %JAVA_HOME%\bin  (Windows) 
      $JAVA_HOME/bin   (UNIX)

If using a Java 6 kit, you may need to copy the jaxb-*, saaj-*, jaxws-* jars 
from the lib dir to your jre/lib/endorsed directory.


2.2 Apache Ant 1.6.5 (or newer, 1.7.0 should work as well)

To run samples included in the binary distribution of Apache CXF,
you must install the Apache Ant 1.6.5 build utility, which can be downloaded
from:

    http://ant.apache.org/bindownload.cgi

After installing Apache Ant, add the <AntInstallDir>/bin directory to your PATH.

For more details, see the Installation Guide.


2.3 Bouncy Castle/JCE requirement for WS-Security

To use the WS-Security features of CXF, you need to obtain a JCE crypto provider
that implements the algorithms that you plan to use. One option is to download 
the Bouncy Castle jar from:
http://bouncycastle.org/download/bcprov-jdk14-136.jar 
and add that to the lib directory or classpath.   



3. Building the Samples

Building the samples included in the binary distribution is easy. Change to
the samples directory and follow the build instructions in the README.txt file 
included with each sample.

4. Errata

4.1 WS-Security
The WS-Security configuration mechanisms may change between this release and 
the next one as we add in support for WS-SecurityPolicy and WS-Trust.

5. Reporting Problems

If you have any problems or want to send feedback of any kind, please e-mail the
cxf dev list, cxf-dev@incubator.apache.org.  You can also file issues in JIRA at:

http://issues.apache.org/jira/browse/CXF

6. Specific issues, features, and improvements fixed in the 

Release Notes - CXF - Version 2.0.6

** Bug
    * [CXF-918] - java code from wsdl2java for wrapped style if request and response have elements with the same names and different datatypes
    * [CXF-1229] - Check for element name clash in request and response messages ignores setting of enableWrapperStyle
    * [CXF-1388] - Error when running client generated by Wsdl2Java tool 'org.apache.ws.commons.schema.constants.Enum$EnumValueException: Bad Enumeration value 'extension restriction''
    * [CXF-1445] - Missing repository definition
    * [CXF-1464] - xmlbinding error
    * [CXF-1481] - PropertyEditor for class "org.apache.cxf.binding.soap.SoapVersion"  is wrong
    * [CXF-1486] - wsdl2java generates aync SEI methods having compile errors when consuming a BARE service returning int.
    * [CXF-1487] - WS-RM policy assertions not merged properly 
    * [CXF-1488] - Synchronization issues in PolicyEngineImpl
    * [CXF-1491] - ReadHeadersInterceptor reads to much after parsing soap-header and breaks wss signature
    * [CXF-1492] - JAXB databinding adds classes recursively to JAXBContext. The reference impl. adds only the request and response classes.
    * [CXF-1493] - Cannot  build 2.0.4 JBI Integration 
    * [CXF-1496] - Wrong content type produced by CXF BC provider
    * [CXF-1506] - No Implementation-Vendor in manifest
    * [CXF-1515] - Bad Enumeration value 'extension restriction'
    * [CXF-1523] - Reopen Bug CXF-1448: Aegis + SAAJ leads to namespace complaint.
    * [CXF-1524] - SOAP with Attachments (BMMimeMultipart):  DispatchInDatabindingInterceptor 's call to soapMessage.countAttachments() throws IOException 
    * [CXF-1528] - DynamicClientFactory throws IllegalStateException due to JAXB not generating classes when unexpected schema element encountered in WSDL
    * [CXF-1531] - support to publish the endpoint with multiple addresses which are starting with same context path
    * [CXF-1534] - JAXWSMethodInvoker doesn't honour faultcode in thrown SoapFault
    * [CXF-1537] - Out only out-of-band headers don't code gen correctly (with -exsh true) and runtime doesn't work with -exsh false


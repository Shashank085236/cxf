<?xml version="1.0" encoding="UTF-8"?>

<xs:schema targetNamespace="http://celtix.objectweb.org/bus/configuration/security"
           xmlns:xs="http://www.w3.org/2001/XMLSchema" 
           elementFormDefault="qualified" 
           attributeFormDefault="unqualified"
           xmlns:jaxb="http://java.sun.com/xml/ns/jaxb"
           xmlns:tns="http://celtix.objectweb.org/bus/configuration/security"
           jaxb:version="2.0">

    <xs:annotation>
        <xs:appinfo>
            <jaxb:globalBindings generateIsSetMethod="true"/>
        </xs:appinfo>
    </xs:annotation>

    <xs:complexType name="AuthorizationPolicy">
        <xs:annotation>
            <xs:documentation>
            Policies for controlling basic authentication
            </xs:documentation>
        </xs:annotation>

        <xs:sequence>
            <xs:element name="UserName" type="xs:string" minOccurs="0">
                <xs:annotation>
                    <xs:documentation>
                    User Name for  server BASIC authentication login
                    (some servers require users to authenticate with the server -- see also Password, AuthorizationType, and Authorization)
                    </xs:documentation>
                </xs:annotation>      
            </xs:element>

            <xs:element name="Password" type="xs:string" minOccurs="0">
                <xs:annotation>
                    <xs:documentation>
                    Password for server BASIC authentication login
                    (some servers require users to authenticate with the server -- see also UserName, AuthorizationType, and Authorization)
                    </xs:documentation>
                </xs:annotation>      
            </xs:element>

            <xs:element name="AuthorizationType" type="xs:string" minOccurs="0">
                <xs:annotation>
                    <xs:documentation>
                    Type of authentication to use with server, if not using
                    username and password based "BASIC" authentication.
                    If username and password are used, this does not need to be set.
                    (some servers require users to authenticate with the server -- see also UserName, Password, and Authorization)
                    </xs:documentation>
                </xs:annotation>      
            </xs:element>

            <xs:element name="Authorization" type="xs:string" minOccurs="0">
                <xs:annotation>
                    <xs:documentation>
                    Actual authentication data for server, if not using
                    username and password based "BASIC" authentication
                    If username and password are used, this does not need to be set.
                    (some servers require users to authenticate with the server -- see also UserName, Password, and AuthorizationType)
                    </xs:documentation>
                </xs:annotation>      
            </xs:element>
        </xs:sequence>
    </xs:complexType>
    <xs:element name="authorization" type="tns:AuthorizationPolicy"/>
    




    <xs:complexType name="SSLServerPolicy">
        <xs:annotation>
            <xs:documentation>
            New policies for controlling SSL encryption
            </xs:documentation>
        </xs:annotation>

    	<xs:sequence>
    		<!--SSL related elements-->

	    <xs:element name="Keystore" type="xs:string" minOccurs="0" maxOccurs="1">
                <xs:annotation>
                    <xs:documentation>
                    Location of the Keystore, defaults to users home directory
                    </xs:documentation>
                </xs:annotation>      
            </xs:element>

	    <xs:element name="KeystoreType" type="xs:string" minOccurs="0" maxOccurs="1">
                <xs:annotation>
                    <xs:documentation>
                    Keystore algorithm
                    </xs:documentation>
                </xs:annotation>      
            </xs:element>

            <xs:element name="KeystorePassword" type="xs:string" minOccurs="0" maxOccurs="1">
                <xs:annotation>
                    <xs:documentation>
                    Password for accessing data in the keystore.
                    </xs:documentation>
                </xs:annotation>      
            </xs:element>

            <xs:element name="KeyPassword" type="xs:string" minOccurs="0" maxOccurs="1">
                <xs:annotation>
                    <xs:documentation>
                    Key password for accessing first entry in the keystore.
                    </xs:documentation>
                </xs:annotation>      
            </xs:element>

	    <xs:element name="WantClientAuthentication" type="xs:boolean" minOccurs="0" maxOccurs="1">
                <xs:annotation>
                    <xs:documentation>
                    If https client authentication want, set to true. Defaults to false, so no client authentication.
                    </xs:documentation>
                </xs:annotation>      
            </xs:element>

	    <xs:element name="RequireClientAuthentication" type="xs:boolean" minOccurs="0" maxOccurs="1">
                <xs:annotation>
                    <xs:documentation>
                    If https client authentication required, set to true. Defaults to false, so no client authentication.
                    </xs:documentation>
                </xs:annotation>      
            </xs:element>

	    <xs:element name="KeystoreAlgorithm" type="xs:string" minOccurs="0" maxOccurs="1">
                <xs:annotation>
                    <xs:documentation>
                     Specify the algorithm used by the key manager factory for the keystore
                    </xs:documentation>
                </xs:annotation>      
            </xs:element>

	    <xs:element name="Ciphersuites" type="xs:string" minOccurs="0" maxOccurs="unbounded">
                <xs:annotation>
                    <xs:documentation>
                    Ciphersuites supported.
                    </xs:documentation>
                </xs:annotation>      
            </xs:element>

            <xs:element name="TrustStore" type="xs:string" minOccurs="0" maxOccurs="1">
                <xs:annotation>
                    <xs:documentation>
                    Location of truststore, defaults to $JREHOME/lib/security/cacerts
                    </xs:documentation>
                </xs:annotation>      
            </xs:element>

            <xs:element name="TrustStoreType" type="xs:string" minOccurs="0" maxOccurs="1">
                <xs:annotation>
                    <xs:documentation>
                    TrustStore type, defaults to JKS
                    </xs:documentation>
                </xs:annotation>      
            </xs:element>

	    <xs:element name="TrustStoreAlgorithm" type="xs:string" minOccurs="0" maxOccurs="1">
                <xs:annotation>
                    <xs:documentation>
                     Specify the algorithm used by the key manager factory for the truststore, not supported yet.
                    </xs:documentation>
                </xs:annotation>      
            </xs:element>

	    <xs:element name="SecureSocketProtocol" type="xs:string" minOccurs="0" maxOccurs="1">
                <xs:annotation>
                    <xs:documentation>
                    Secure socket protocol used, defaults to TLSv1.
                    </xs:documentation>
                </xs:annotation>      
            </xs:element>

	    <xs:element name="SessionCaching" type="xs:boolean" minOccurs="0" maxOccurs="1">
                <xs:annotation>
                    <xs:documentation>
                    Whether TLS session caching should be used. Currently not supported, so no caching.
                    </xs:documentation>
                </xs:annotation>      
            </xs:element>

	    <xs:element name="SessionCacheKey" type="xs:string" minOccurs="0" maxOccurs="1">
                <xs:annotation>
                    <xs:documentation>
                    Key used to lookup session cache. Currently not supported.
                    </xs:documentation>
                </xs:annotation>      
            </xs:element>

	    <xs:element name="MaxChainLength" type="xs:long" minOccurs="0" maxOccurs="1">
                <xs:annotation>
                    <xs:documentation>
                    Limits the maximum length of the chain accepted by the server. Currently not supported.
                    </xs:documentation>
                </xs:annotation>      
            </xs:element>

	    <xs:element name="CertValidator" type="xs:string" minOccurs="0" maxOccurs="1">
                <xs:annotation>
                    <xs:documentation>
                    Mechanism for performing extra checks on certificate accepted by the server. Currently not supported.
                    </xs:documentation>
                </xs:annotation>      
            </xs:element>


    	</xs:sequence>
    </xs:complexType>



    <xs:complexType name="SSLClientPolicy">
        <xs:annotation>
            <xs:documentation>
            New policies for controlling SSL encryption
            </xs:documentation>
        </xs:annotation>

    	<xs:sequence>
    		<!--SSL related elements-->

	    <xs:element name="Keystore" type="xs:string" minOccurs="0" maxOccurs="1">
                <xs:annotation>
                    <xs:documentation>
                    Location of the Keystore, defaults to users home directory
                    </xs:documentation>
                </xs:annotation>      
            </xs:element>

	    <xs:element name="KeystoreType" type="xs:string" minOccurs="0" maxOccurs="1">
                <xs:annotation>
                    <xs:documentation>
                    Keystore type, defaults to JKS
                    </xs:documentation>
                </xs:annotation>      
            </xs:element>

            <xs:element name="KeystorePassword" type="xs:string" minOccurs="0" maxOccurs="1">
                <xs:annotation>
                    <xs:documentation>
                    Password for accessing data in the keystore.
                    </xs:documentation>
                </xs:annotation>      
            </xs:element>

            <xs:element name="KeyPassword" type="xs:string" minOccurs="0" maxOccurs="1">
                <xs:annotation>
                    <xs:documentation>
                    Key password for accessing first entry in the keystore.
                    </xs:documentation>
                </xs:annotation>      
            </xs:element>

	    <xs:element name="KeystoreAlgorithm" type="xs:string" minOccurs="0" maxOccurs="1">
                <xs:annotation>
                    <xs:documentation>
                     Specify the algorithm used by the key manager factory for the keystore
                    </xs:documentation>
                </xs:annotation>      
            </xs:element>


	    <xs:element name="Ciphersuites" type="xs:string" minOccurs="0" maxOccurs="unbounded">
                <xs:annotation>
                    <xs:documentation>
                    Ciphersuites supported.
                    </xs:documentation>
                </xs:annotation>      
            </xs:element>

            <xs:element name="TrustStore" type="xs:string" minOccurs="0" maxOccurs="1">
                <xs:annotation>
                    <xs:documentation>
                    Location of truststore, defaults to $JREHOME/lib/security/cacerts
                    </xs:documentation>
                </xs:annotation>      
            </xs:element>

            <xs:element name="TrustStoreType" type="xs:string" minOccurs="0" maxOccurs="1">
                <xs:annotation>
                    <xs:documentation>
                    TrustStore type, defaults to JKS
                    </xs:documentation>
                </xs:annotation>      
            </xs:element>


	    <xs:element name="TrustStoreAlgorithm" type="xs:string" minOccurs="0" maxOccurs="1">
                <xs:annotation>
                    <xs:documentation>
                     Specify the algorithm used by the key manager factory for the truststore, not supported yet.
                    </xs:documentation>
                </xs:annotation>      
            </xs:element>

	    <xs:element name="SecureSocketProtocol" type="xs:string" minOccurs="0" maxOccurs="1">
                <xs:annotation>
                    <xs:documentation>
                    Secure socket protocol used, defaults to TLSv1.
                    </xs:documentation>
                </xs:annotation>      
            </xs:element>

	    <xs:element name="SessionCaching" type="xs:boolean" minOccurs="0" maxOccurs="1">
                <xs:annotation>
                    <xs:documentation>
                    Whether TLS session caching should be used. Currently not supported, so no caching.
                    </xs:documentation>
                </xs:annotation>      
            </xs:element>

	    <xs:element name="SessionCacheKey" type="xs:string" minOccurs="0" maxOccurs="1">
                <xs:annotation>
                    <xs:documentation>
                    Key used to lookup session cache. Currently not supported.
                    </xs:documentation>
                </xs:annotation>      
            </xs:element>

	    <xs:element name="MaxChainLength" type="xs:long" minOccurs="0" maxOccurs="1">
                <xs:annotation>
                    <xs:documentation>
                    Limits the maximum length of the chain accepted by the client. Currently not supported.
                    </xs:documentation>
                </xs:annotation>      
            </xs:element>

	    <xs:element name="CertValidator" type="xs:string" minOccurs="0" maxOccurs="1">
                <xs:annotation>
                    <xs:documentation>
                    Mechanism for performing extra checks on certificate accepted by the client. Currently not supported.
                    </xs:documentation>
                </xs:annotation>      
            </xs:element>
	    
	    <xs:element name="ProxyHost" type="xs:string" minOccurs="0" maxOccurs="1">
                <xs:annotation>
                    <xs:documentation>
                    For URL access through a proxy server, currently not supported
                    </xs:documentation>
                </xs:annotation>      
            </xs:element>

	    <xs:element name="ProxyPort" type="xs:long" minOccurs="0" maxOccurs="1">
                <xs:annotation>
                    <xs:documentation>
                    For URL access through a proxy server, currently not supported
                    </xs:documentation>
                </xs:annotation>      
            </xs:element>

    	</xs:sequence>
    </xs:complexType>


    <xs:element name="sslServer" type="tns:SSLServerPolicy"/>
    <xs:element name="sslClient" type="tns:SSLClientPolicy"/>

</xs:schema>

<?xml version="1.0"?>
<!-- common build targets for Celtix demos -->
<project name="celtix-demo-common">

    <property name="build.dir" location ="${basedir}/build"/>
    <property name="build.classes.dir" location ="${build.dir}/classes"/>
    <property name="build.src.dir" location ="${build.dir}/src"/>

    <!-- find the tools jar, which on darwin, tools.jar does not exist -->
    <property environment="env"/>
    <available property="tools.jar" value="${env.JAVA_HOME}/lib/tools.jar"
           file="${env.JAVA_HOME}/lib/tools.jar"/>
    <path id="jdk.tools.classpath">
        <pathelement location="${tools.jar}"/>
    </path>

    <condition property="is.java.version.15">
        <equals arg1="${ant.java.version}" arg2="1.5"/>
    </condition> 

    <fail message="Celtix requires Java version 1.5 or higher. You are currently using Java version ${ant.java.version}."
        unless="is.java.version.15"/>

    <!-- 
        First assume we are either in a working copy or in a source
        distribution, and expect third party libraries in the ../../tools directory.
        If neither directory exists assume we are in a binary distribution
        in which case third party tools are located in the ../../lib directory.
    -->

    <available property="thirdparty.tools.dir" value="${basedir}/../../tools/" file="tools" filepath="${basedir}/../.." type="dir"/>
    <condition property="thirdparty.tools.dir" value="${basedir}/../../lib">
        <and>
            <not>
                <isset property="thirdparty.tools.dir"/>
            </not>
            <available filepath="${basedir}/../.." file="lib" type="dir"/>
        </and>
    </condition>
    <property name="jaxws.lib.dir" location="${thirdparty.tools.dir}/jaxws-ri/20050929/lib"/>
    <property name="celtix.etc.dir" location="../../etc"/>

    <target name="build"  depends="generate.code,compile" description="build demo client and server"/>

    <path id="celtix.build.classpath">
        <pathelement location="${basedir}/build/classes"/>
        <pathelement location="${basedir}/../../lib/celtix.jar"/>
        <pathelement location="${basedir}/../../build/lib/celtix.jar"/>
        <fileset dir="${jaxws.lib.dir}">
            <include name="*.jar"/>
        </fileset>
    </path>
    

    <path id="celtix.runtime.classpath">
        <path refid="celtix.build.classpath"/>
        <pathelement location="${thirdparty.tools.dir}/wsdl4j/1.5.1/wsdl4j.jar"/>
        <fileset dir="${thirdparty.tools.dir}/tomcat/5.5.9">
            <include name="server/lib/*.jar"/>
            <include name="common/lib/*.jar"/>
            <include name="bin/*.jar"/>
        </fileset>
    </path>

    <macrodef name="celtixrun">
        <attribute name="classname"/>
	<attribute name="param1" default=""/>
	<attribute name="param2" default=""/>
	<attribute name="param3" default=""/>
	<attribute name="param4" default=""/>
	<attribute name="param5" default=""/>
	<sequential>
            <java classname="@{classname}" fork="yes">
                <classpath>
                    <path refid="celtix.runtime.classpath"/>
                </classpath>
                <arg value="@{param1}"/>
                <arg value="@{param2}"/>
                <arg value="@{param3}"/>
                <arg value="@{param4}"/>
                <arg value="@{param5}"/>
                <assertions>
                    <enable package="org.objectweb.celtix"/>
                </assertions>
                <sysproperty key="java.util.logging.config.file" value="${celtix.etc.dir}/logging.properties"/>
            </java>
        </sequential>
    </macrodef>

    <target name="init">
        <mkdir dir="${build.classes.dir}"/>
        <mkdir dir="${build.src.dir}"/>
    </target>

    <target name="compile" depends="generate.code">
        <javac srcdir="${basedir}/src" destdir="${basedir}/build/classes"
           debug="true">
            <classpath refid="celtix.build.classpath"/>
        </javac>
    </target>

    <target name="generate.code" depends="init">
        <uptodate property="codegen.notrequired" value="true">
            <srcfiles dir="${wsdl.dir}" includes="*"/>
            <mapper type="merge" to="${build.src.dir}/.CODEGEN.DONE"/>
        </uptodate>
        <antcall target="codegen.internal"/>
    </target>

    <target name="codegen.internal" unless="codegen.notrequired">
        <wsdltojava file="${wsdl.dir}/${wsdl.file}" destdir="${build.classes.dir}"
            srcdestdir="${build.src.dir}"/>
        <touch file="${build.src.dir}/.CODEGEN.DONE"/>
    </target>
    

    <target name="clean">
        <delete dir="${build.dir}"/>
    </target>


    <!-- targets and tasks for code generation -->

    <macrodef name="wsdltojava">
        <attribute name="srcdestdir"/>
        <attribute name="destdir"/>
        <attribute name="file"/>
        <attribute name="package" default="NOT_SPECIFIED"/>
        <sequential>
            <mkdir dir="@{destdir}"/>
            <mkdir dir="@{srcdestdir}"/>
            <condition property="package.arg.@{file}" value="-p @{package}">
                <not>
                    <equals arg1="@{package}" arg2="NOT_SPECIFIED"/>
                </not>
            </condition>
            <property name="package.arg.@{file}" value=""/>
            <java failonerror="true" classname="com.sun.tools.ws.WsImport" fork="yes">
                <classpath>
                    <fileset dir="${jaxws.lib.dir}">
                        <include name="*.jar"/>
                    </fileset>
                    <path refid="jdk.tools.classpath"/>
                </classpath>
                <sysproperty key="java.util.logging.config.file" value="${celtix.etc.dir}/logging.properties"/>
                <arg line="${package.arg.@{file}}"/>
                <arg value="-keep"/>
                <arg value="-s"/>
                <arg value="@{srcdestdir}"/>
                <arg value="-d"/>
                <arg value="@{destdir}"/>
                <arg value="@{file}"/>
            </java>
        </sequential>
    </macrodef>
</project>

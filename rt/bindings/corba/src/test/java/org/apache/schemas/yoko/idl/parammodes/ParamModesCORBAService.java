/**
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements. See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership. The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied. See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

package org.apache.schemas.yoko.idl.parammodes;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import org.apache.schemas.yoko.idl.parammodes.ParamModes;
/**
 * This class was generated by the Celtix 1.1-SNAPSHOT
 * Mon Sep 18 15:00:01 NDT 2006
 * Generated source version: 1.1-SNAPSHOT
 * 
 */

@WebServiceClient(name = "ParamModesCORBAService", targetNamespace = "http://schemas.apache.org/yoko/idl/ParamModes", wsdlLocation = "file:/home/dmiddlem/dev/yoko/trunk/bindings/src/test/resources/wsdl/ParamModes.wsdl")
public class ParamModesCORBAService extends Service {

    private final static URL WSDL_LOCATION;
    private final static QName SERVICE = new QName("http://schemas.apache.org/yoko/idl/ParamModes", "ParamModesCORBAService");
    private final static QName ParamModesCORBAPort = new QName("http://schemas.apache.org/yoko/idl/ParamModes", "ParamModesCORBAPort");
    static {
        URL url = null;
        try {
            url = new URL("file:/home/dmiddlem/dev/yoko/trunk/bindings/src/test/resources/wsdl/ParamModes.wsdl");
        } catch (MalformedURLException e) {
            e.printStackTrace();
        }
        WSDL_LOCATION = url;
    }

    public ParamModesCORBAService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public ParamModesCORBAService() {
        super(WSDL_LOCATION, SERVICE);
    }

    /**
     * 
     * @return
     *     returns ParamModesCORBAPort
     */
    @WebEndpoint(name = "ParamModesCORBAPort")
    public ParamModes getParamModesCORBAPort() {
        return (ParamModes)super.getPort(ParamModesCORBAPort, ParamModes.class);
    }

}

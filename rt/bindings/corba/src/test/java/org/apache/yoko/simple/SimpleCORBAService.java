/**
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements. See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership. The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied. See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

package org.apache.yoko.simple;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import org.apache.yoko.simple.Simple;
/**
 * This class was generated by the Celtix 1.1-SNAPSHOT
 * Thu Jun 15 16:22:57 NDT 2006
 * Generated source version: 1.1-SNAPSHOT
 * 
 */

@WebServiceClient(name = "SimpleCORBAService", targetNamespace = "http://yoko.apache.org/simple", wsdlLocation = "file:/home/dmiddlem/dev/yoko/trunk/bindings/src/test/resources/wsdl/simpleIdl.wsdl")
public class SimpleCORBAService extends Service {

    private final static URL WSDL_LOCATION;
    private final static QName SERVICE = new QName("http://yoko.apache.org/simple", "SimpleCORBAService");
    private final static QName SimpleCORBAPort = new QName("http://yoko.apache.org/simple", "SimpleCORBAPort");
    static {
        URL url = null;
        try {
            url = new URL("file:/home/dmiddlem/dev/yoko/trunk/bindings/src/test/resources/wsdl/simpleIdl.wsdl");
        } catch (MalformedURLException e) {
            e.printStackTrace();
        }
        WSDL_LOCATION = url;
    }

    public SimpleCORBAService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public SimpleCORBAService() {
        super(WSDL_LOCATION, SERVICE);
    }

    /**
     * 
     * @return
     *     returns SimpleCORBAPort
     */
    @WebEndpoint(name = "SimpleCORBAPort")
    public Simple getSimpleCORBAPort() {
        return (Simple)super.getPort(SimpleCORBAPort, Simple.class);
    }

}

<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans SYSTEM "http://celtix.objectweb.org/configuration/spring/celtix-spring-beans.dtd">

<beans 
    xmlns:ct="http://celtix.objectweb.org/configuration/types"
    xmlns:jaxws-types="http://celtix.objectweb.org/bus/jaxws/configuration/types"
>
  
  <!-- configuration for the handler demo client -->

  <!-- to specify non-default configuration for a configurable component, supply a bean definition for this 
       component with
       
       Class: the class name of the bean is derived from the namespace uri of the component's configuration
       in the following way:
       The namespace uri is converted into a package name. To this, the suffix 'spring' is appended, and 
       finally the actual class name obtained by converting the last part of the package name into a class name 
       and suffixing it with 'Bean'.
       Example: 
       The namespace uri for the Service component configuration is 
           http://celtix.objectweb.org/bus/jaxws/service-config
       The resulting bean class is
           org.objectweb.celtix.bus.jaxws.service_config.spring.ServiceConfigBean
     
       Id: a unique identifier for the instance of the configurable component represented by the bean
       The implementation for this is component specific, e.g. for the Bus component it is the bus's id
       (default: celtix), for Service components it the id of the bus, followed by a '.' and the stringified 
       presentation of the service's QName, etc. 
       
       This is because the bean id needs to be unique accross all beans, not just accross all beans of the
       same class (I will do further investigation into that though).
       
       The actual component's configuration then is composed of <property> elements, the name attribute of which
       must be the name of one of the component's configuration items.
       The (non-default) value for that item can be specified either as text (if this is possible, e.g. for 
       strings) or as the content of the <value> element.  
       
       Refer to the component configuration metadata (e.g. to service-config.xml) for more information 
       about possible values.     
             
  -->

  <!-- Comment the following bean definition or the content of the jaxws-types:handler element below to run 
       the client without any handlers installed.
  -->

  <bean id="celtix.{http://www.objectweb.org/handlers}AddNumbersService" class="org.objectweb.celtix.bus.jaxws.service_config.spring.ServiceConfigBean">

      <property name="handlerChain">
          <value>
              <jaxws-types:handlerChainValue>
                 <jaxws-types:handler>
                      <jaxws-types:name>Small Number Handler</jaxws-types:name>
                      <jaxws-types:className>demo.handlers.common.SmallNumberHandler</jaxws-types:className>
                      <jaxws-types:init-param>
                          <jaxws-types:param-name>arg1</jaxws-types:param-name>
                          <jaxws-types:param-value>value1</jaxws-types:param-value>
                      </jaxws-types:init-param>
                      <jaxws-types:init-param>
                          <jaxws-types:param-name>arg2</jaxws-types:param-name>
                          <jaxws-types:param-value>value2</jaxws-types:param-value>
                      </jaxws-types:init-param>
                  </jaxws-types:handler>
              </jaxws-types:handlerChainValue>              
          </value>
      </property>
      
  </bean>
 
</beans>

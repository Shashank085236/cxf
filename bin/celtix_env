# 
# set the environment for the Celtix runtime 
#

#
# a simple function for adding jars to the 
# classpath
#
add_jars_to_classpath() {
    for i in $1/*.jar; do 
	CLASSPATH=$CLASSPATH:$i
    done
}

#
# check that the two required environment variables are set
#
if [ ${JAXWS_HOME-"x"} == "x" ]; then
    echo "The JAXWS_HOME  environment variable is unset.  We use the"
    echo "JAX-WS interfaces and the JAXB jars that are included in the"
    echo "JAX-WS 2.0 Early Access release.   You need to download that from"
    echo "https://jax-rpc.dev.java.net/jaxws20-ea2/, install it, and set"
    echo "the JAXWS_HOME environment variable to the installation"
    echo "directory."
    return 1
fi

if [ ${CELTIX_HOME-"x"} == "x" ]; then
    echo "The CELTIX_HOME environment variable is unset.  Please set CELTIX_HOME"
    echo "envionment variable to the location of the Celtix installation"
    return 1
fi

#
# let's avoid setting it all again if we
# can to avoid really big environment spaces
#
if [ "${CELTIX_ENV_SET:-$dummy}" = "true" ]
then
    echo Celtix Environment already set
    return 0
fi

CELTIX_ENV_SET=true
#
# add the core celtix jar to the classpath
#
CLASSPATH=$CELTIX_HOME/lib/celtix.jar:${CLASSPATH-""}

#
# add all of the jars needed by the runtime to the 
# classpath
#
add_jars_to_classpath $CELTIX_HOME/lib/wsdl4j/1.5.1
add_jars_to_classpath $CELTIX_HOME/lib/tomcat/5.5.9/server/lib
add_jars_to_classpath $CELTIX_HOME/lib/tomcat/5.5.9/common/lib
add_jars_to_classpath $CELTIX_HOME/lib/tomcat/5.5.9/bin
add_jars_to_classpath $JAXWS_HOME/lib

export CLASSPATH CELTIX_ENV_SET

<?xml version='1.0' encoding='UTF-8'?>
<chapter>
  <title>Lists</title>
  <section>
    <title>Simple Lists</title>
    <para>Simple lists are like a grocery list. They are a simple list of
    words or phrases without any delimiter. Their elements can only consist of
    simple, in-line tags. Therefore they cannot contain sublists, examples,
    code listings or multiple paragraphs. They are rarely used in CeltiXfire(CXF)
    documentation.</para>
    <section>
      <title>Specifying a simple list</title>
      <para>A simple list is specified by a <sgmltag class="element">simplelist</sgmltag> element. 
	  <sgmltag class="element">simplelist</sgmltag> has two optional attributes:</para>
      <table>
        <title>Attributes of the <sgmltag class="element">simplelist</sgmltag> Element</title>
        <tgroup cols="3">
          <thead>
            <row>
              <entry>Attribute</entry>
              <entry>Values</entry>
              <entry>Description</entry>
            </row>
          </thead>
          <tbody>
            <row>
              <entry>
                <sgmltag class="attribute">type</sgmltag>
              </entry>
              <entry><sgmltag class="attvalue">inline</sgmltag>, <sgmltag class="attvalue">horiz</sgmltag>, <sgmltag class="attvalue">vert</sgmltag>(default)</entry>
              <entry>Specifies how the items in the list are to be listed.</entry>
            </row>
            <row>
              <entry>
                <sgmltag class="attribute">columns</sgmltag>
              </entry>
              <entry>&gt;=1</entry>
              <entry>Specifies the number of columns to use when <sgmltag class="attribute">type</sgmltag> is set to <sgmltag class="attvalue">horiz</sgmltag> or <sgmltag class="attvalue">vert</sgmltag>.</entry>
            </row>
          </tbody>
        </tgroup>
      </table>
      <para>The elements of a simple list are specified using a <sgmltag class="element">member</sgmltag> element. The contents of each<sgmltag>member</sgmltag> element can only contain character data and
      inline elements.</para>
    </section>
    <section>
      <title>Example</title>
      <para><xref linkend="simpmarkup"/> shows the markup for a simple
      list.</para>
      <example id="simpmarkup" xreflabel="Example 1">
        <title>Simple List Markup</title>
        <programlisting>&lt;simplelist&gt;
  &lt;member&gt;Swedish Fish&lt;/member&gt;
  &lt;member&gt;Mike &amp; Ike&lt;/member&gt;
  &lt;member&gt;Sour Patch Kids&lt;/member&gt;
  &lt;member&gt;Gummy Bears&lt;/member&gt;
&lt;/simplelist&gt;</programlisting>
      </example>
    </section>
  </section>
  <section>
    <title>Itemized Lists</title>
    <para>An itemized list is used for lists where the order of the items in
    the list does not matter. They are like bulleted lists or the lists that
    are created by the <sgmltag class="element">ul</sgmltag> tag in
    HTML.</para>
    <section>
      <title>Specifying an Itemized List</title>
      <para>An itemized list is specified by an <sgmltag class="element">itemizedlist</sgmltag> element. You can specify an
      <sgmltag class="attribute">id</sgmltag> attribute for itemized lists. If
      the list is going to referenced by an <sgmltag class="element">xref</sgmltag> element, you should also specify a value
      for the <sgmltag class="attribute">xreflabel</sgmltag> attribute.</para>
      <para>Each item in an itemized list is specified by a <sgmltag class="element">listitem</sgmltag> element. The <sgmltag class="element">listitem</sgmltag> element is a wrapper element and can
      contain any container elements such as a <sgmltag class="element">para</sgmltag> element. All content within a <sgmltag class="element">listitem</sgmltag> element will be indented to the same
      level. You can also specify sub-lists within a <sgmltag class="element">listitem</sgmltag> element.</para>
    </section>
    <section>
      <title>Example</title>
      <para><xref linkend="itemmarkup"/> shows the markup for an itemized
      list.</para>
      <example id="itemmarkup" xreflabel="Example 2">
        <title>Itemized List Markup</title>
        <programlisting>&lt;itemizedlist&gt;
  &lt;listitem&gt;
    &lt;para&gt;This is the first item in my list&lt;/para&gt;
  &lt;/listitem&gt;
  &lt;listitem&gt;
    &lt;para&gt;This is the second item in my list.&lt;/para&gt;
    &lt;para&gt;It has two paragraphs.&lt;/para&gt;
  &lt;/listitem&gt;
  &lt;listitem&gt;
    &lt;para&gt;This item has a sublist.&lt;/para&gt;
    &lt;itemizedlist&gt;
      &lt;listitem&gt;&lt;para&gt;first&lt;/para&gt;&lt;/listitem&gt;
      &lt;listitem&gt;&lt;para&gt;second&lt;/para&gt;&lt;/listitem&gt;
    &lt;/itemizedlist&gt;
  &lt;/listitem&gt;
&lt;/itemizedlist&gt;</programlisting>
      </example>
    </section>
  </section>
  <section>
    <title>Ordered List</title>
    <para>An ordered list is a list where the order of the elements is
    important and made explicit. They are like numbered lists and lists that
    are created using the <sgmltag class="element">ol</sgmltag> tag in
    HTML.</para>
    <section>
      <title>Specifying an Ordered List</title>
      <para>Ordered lists are specified by an <sgmltag class="element">orderedlist</sgmltag> element. In addition to the
      <sgmltag class="attribute">id</sgmltag> attribute and <sgmltag class="attribute">xreflable</sgmltag> attribute, <sgmltag class="element">orderedlist</sgmltag> elements have three optional
      elements.</para>
      <table>
        <title>Attributes of the <sgmltag class="element">orderedlist</sgmltag> Element</title>
        <tgroup cols="3">
          <thead>
            <row>
              <entry>Attribute</entry>
              <entry>Values</entry>
              <entry>Description</entry>
            </row>
          </thead>
          <tbody>
            <row>
              <entry>
                <sgmltag class="attribute">continuation</sgmltag>
              </entry>
              <entry><sgmltag class="attvalue">continues</sgmltag>, <sgmltag class="attvalue">restarts</sgmltag>(default)</entry>
              <entry>Specifies if the item numbering should restart at one or continue from the previous ordered list.</entry>
            </row>
            <row>
              <entry>
                <sgmltag class="attribute">inheritnum</sgmltag>
              </entry>
              <entry><sgmltag class="attvalue">inherit</sgmltag>, <sgmltag class="attvalue">ignore</sgmltag>(default)</entry>
              <entry>Valid only for nested lists. Specifies if the items in the nested list contain a reference to the item of the parent list.</entry>
            </row>
            <row>
              <entry>
                <sgmltag class="attribute">numeration</sgmltag>
              </entry>
              <entry><sgmltag class="attvalue">arabic</sgmltag>, <sgmltag class="attvalue">loweralpha</sgmltag>, <sgmltag class="attvalue">lowerroman</sgmltag>, <sgmltag class="attvalue">upperalpha</sgmltag>, <sgmltag class="attvalue">upperroman</sgmltag></entry>
              <entry>Specifies the numbering style to use for the list.</entry>
            </row>
          </tbody>
        </tgroup>
      </table>
      <para>Items in an ordered list are specified using a <sgmltag class="element">listitem</sgmltag> element. The <sgmltag class="element">listitem</sgmltag> element is a wrapper element and can
      contain any container elements such as a <sgmltag class="element">para</sgmltag> element. All content within a <sgmltag class="element">listitem</sgmltag> element will be indented to the same
      level. You can also specify sub-lists within a <sgmltag class="element">listitem</sgmltag> element.</para>
    </section>
  </section>
  <section>
    <title>Segmented Lists</title>
    <para>Segmented lists are a special type of list where the items consist
    of a group of labeled elements. They are not used in the CXF documentation.</para>
  </section>
  <section>
    <title>Variable Lists</title>
    <para>A variable list looks similar to a glossary. It consists of a word,
    or phrase, and some text describing the word, or phrase. <xref linkend="varexample"/> shows a variable list.</para>
    <variablelist id="varexample">
      <title>List of Rooms</title>
      <varlistentry>
        <term>Kitchen</term>
        <listitem>
          <para>The room where food is stored and prepared.</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>Garage</term>
        <listitem>
          <para>Where the cars are parked.</para>
          <note>
            <para>Bikes are also here.</para>
          </note>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>Living room</term>
        <term>Family room</term>
        <listitem>
          <para>This is where we watch TV.</para>
        </listitem>
      </varlistentry>
    </variablelist>
    <section>
      <title>Specifying a Variable List</title>
      <para>Variable lists are specified by a <sgmltag class="element">variablelist</sgmltag> element. The <sgmltag class="element">variablelist</sgmltag> element can have the optional
      <sgmltag class="attribute">id</sgmltag> attribute and <sgmltag class="attribute">xreflable</sgmltag> attribute specified. You can also
      supply a title for a variable list by adding a <sgmltag class="element">title</sgmltag> element as the <sgmltag class="element">variablelist</sgmltag> element&apos;s first child.</para>
      <para>The items in a variable list are specified using a <sgmltag class="element">varlistentry</sgmltag> element. The <sgmltag class="element">varlistentry</sgmltag> element has two children elements
      that specify the contents of the item: <sgmltag class="element">term</sgmltag> and <sgmltag class="element">listitem</sgmltag>.</para>
      <section>
        <title>Specifying terms</title>
        <para>You can specify one or more <sgmltag class="element">term</sgmltag> elements in a <sgmltag class="element">varlistentry</sgmltag> element. Each <sgmltag class="element">term</sgmltag> element can contain text and inline
        markup elements. Each <sgmltag class="element">term</sgmltag> element
        should contain a single term or phrase that the list item
        describes.</para>
      </section>
      <section>
        <title>Describing a term</title>
        <para>You describe the term, or terms, defined by the <sgmltag class="element">term</sgmltag> elements using a single <sgmltag class="element">listitem</sgmltag> element. The <sgmltag class="element">listitem</sgmltag> element is a wrapper element and
        can contain any container elements such as a <sgmltag class="element">para</sgmltag> element. All content within a <sgmltag class="element">listitem</sgmltag> element will be indented to the
        same level. You can also specify sub-lists within a <sgmltag class="element">listitem</sgmltag> element.</para>
      </section>
    </section>
    <section>
      <title>Example</title>
      <para><xref linkend="varmarkup"/> shows the markup representing <xref linkend="varexample"/>.</para>
      <example id="varmarkup" xreflabel="Example 3">
        <title>Variable List Markup</title>
        <programlisting>&lt;variablelist id=&quot;varexample&quot;&gt;
  &lt;title&gt;List of Rooms&lt;/title&gt;
  &lt;varlistentry&gt;
    &lt;term&gt;Kitchen&lt;/term&gt;
    &lt;listitem&gt;
      &lt;para&gt;The room where food is stored and prepared.&lt;/para&gt;
    &lt;/listitem&gt;
  &lt;/varlistentry&gt;
  &lt;varlistentry&gt;
    &lt;term&gt;Garage&lt;/term&gt;
    &lt;listitem&gt;
      &lt;para&gt;Where the cars are parked.&lt;/para&gt;
      &lt;note&gt;
        &lt;para&gt;Bikes are also here.&lt;/para&gt;
      &lt;/note&gt;
    &lt;/listitem&gt;
  &lt;/varlistentry&gt;
  &lt;varlistentry&gt;
    &lt;term&gt;Living room&lt;/term&gt;
    &lt;term&gt;Family room&lt;/term&gt;
    &lt;listitem&gt;
      &lt;para&gt;This is where we watch TV.&lt;/para&gt;
    &lt;/listitem&gt;
  &lt;/varlistentry&gt;
&lt;/variablelist&gt;</programlisting>
      </example>
    </section>
  </section>
  <section>
    <title>Glossary Lists</title>
    <para>A glossary list is a special case of a variable list. It is used
    specifically for lists that define terms and where you may want to refer
    the reader back to the definition of a specific term. <xref linkend="glossexample"/> shows a use of a glossary list.</para>
    <glosslist id="glossexample" xreflabel="List of terms">
      <glossentry>
        <glossterm id="consumerdef">consumer</glossterm>
        <glossdef>
          <para>The end user of a service, also called a client for that
          service.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm id="endptdef">endpoint</glossterm>
        <glossdef>
          <para>The point of contact that a <glossterm linkend="servicedef">service</glossterm> provides for its <glossterm linkend="consumerdef">consumers</glossterm>.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm id="servicedef">service</glossterm>
        <glossdef>
          <para>A collection of operations that perform a useful set of
          functions in a network, access to which is implemented as an
          <glossterm linkend="endptdef">endpoint</glossterm>. In a
          service-oriented network, services are defined by a service
          contract.</para>
        </glossdef>
      </glossentry>
      <glossentry>
        <glossterm>service consumer</glossterm>
        <glosssee otherterm="consumerdef"/>
      </glossentry>
    </glosslist>
    <section>
      <title>Specifying a Glossary List</title>
      <para>A glossary list is specified using the <sgmltag class="element">glosslist</sgmltag> element. If you want to refer back
      to a glossary list, you can provide values for the <sgmltag class="attribute">id</sgmltag> attribute and the <sgmltag class="attribute">xreflable</sgmltag> attribute. Unlike variable lists,
      glossary lists cannot have titles.</para>
      <para>The entries in a glossary list are specified using a <sgmltag class="element">glossentry</sgmltag> element. The <sgmltag class="element">glossentry</sgmltag> element typically has two children:
      <sgmltag class="element">glossterm</sgmltag> and <sgmltag class="element">glossdef</sgmltag>. You can also use the <sgmltag class="element">glosssee</sgmltag> element to xref with other
      definitions.</para>
      <section>
        <title>Specifying a Term</title>
        <para>A <sgmltag class="element">glossentry</sgmltag> element can have
        only one <sgmltag class="element">glossterm</sgmltag> element. This
        element specifies the term being defined by this entry. If you are
        going to refer back to this term, you can supply a value for the
        <sgmltag class="attribute">id</sgmltag> attribute.</para>
        <note>
          <para>The <sgmltag class="element">glossterm</sgmltag> element can
          also be used in text entries to refer to terms defined in a glossary
          entry. When used in this manner, you supply a value for the <sgmltag class="attribute">linkend</sgmltag> attribute.</para>
        </note>
      </section>
      <section>
        <title>Defining a Term</title>
        <para>You define a term using either one or more <sgmltag class="element">glossdef</sgmltag> elements or a <sgmltag class="element">glosssee</sgmltag> element. The <sgmltag class="element">glossdef</sgmltag> element is a content element that
        contains markup specifying a definition. If you use more than one
        <sgmltag class="element">glossdef</sgmltag> element, they are treated
        as separate definitions for the same term.</para>
        <para>The <sgmltag class="element">glosssee</sgmltag> element
        redirects the reader to a term with the same meaning. It acts like a
        &quot;See&quot; entry in a dictionary. It has one attribute, <sgmltag class="attribute">otherterm</sgmltag>, whose value is the id of the
        term to which the reader is redirected.</para>
      </section>
    </section>
    <section>
      <title>Example</title>
      <para><xref linkend="glossmarkup"/> shows the markup for <xref linkend="glossexample"/></para>
      <example id="glossmarkup" xreflabel="Example 4">
        <title>Glossary List Markup</title>
        <programlisting>&lt;glosslist id=&quot;glossexample&quot; xreflabel=&quot;List of terms&quot;&gt;
  &lt;glossentry&gt;
    &lt;glossterm id=&quot;consumerdef&quot;&gt;consumer&lt;/glossterm&gt;
    &lt;glossdef&gt;
      &lt;para&gt;The end user of a service, also called a client for that service.&lt;/para&gt;
    &lt;/glossdef&gt;
  &lt;/glossentry&gt;
  &lt;glossentry&gt;
    &lt;glossterm id=&quot;endptdef&quot;&gt;endpoint&lt;/glossterm&gt;
    &lt;glossdef&gt;
      &lt;para&gt;The point of contact that a &lt;glossterm
          linkend=&quot;servicedef&quot;&gt;service&lt;/glossterm&gt; provides for its &lt;glossterm
          linkend=&quot;consumerdef&quot;&gt;consumers&lt;/glossterm&gt;.&lt;/para&gt;
    &lt;/glossdef&gt;
  &lt;/glossentry&gt;
  &lt;glossentry&gt;
    &lt;glossterm id=&quot;servicedef&quot;&gt;service&lt;/glossterm&gt;
    &lt;glossdef&gt;
      &lt;para&gt;A collection of operations that perform a useful set of
          functions in a network, access to which is implemented as an
          &lt;glossterm linkend=&quot;endptdef&quot;&gt;endpoint&lt;/glossterm&gt;. In a
          service-oriented network, services are defined by a service
          contract.&lt;/para&gt;
    &lt;/glossdef&gt;
  &lt;/glossentry&gt;
  &lt;glossentry&gt;
    &lt;glossterm&gt;service consumer&lt;/glossterm&gt;
    &lt;glosssee otherterm=&quot;consumerdef&quot; /&gt;
  &lt;/glossentry&gt;
&lt;/glosslist&gt;</programlisting>
      </example>
    </section>
  </section>
</chapter>